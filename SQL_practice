/*1. Return the customer IDs of customers who have spent
at least $110 with the staff member who has an ID of 2.*/
SELECT customer_id, SUM(amount)
FROM payment
WHERE staff_id = 2
GROUP BY customer_id
HAVING SUM(amount) > 110;

--2. How many films begin with the letter J?
SELECT COUNT (title) FROM film
WHERE title LIKE 'J%';

/*3. What customer has the highest customer ID number whose name 
starts with an 'E' and has an address ID lower than 500?*/
SELECT first_name,last_name FROM customer
WHERE first_name LIKE 'E%'
AND address_id <500
ORDER BY customer_id DESC
LIMIT 1;




-- AS always in first line. 
SELECT customer_id,SUM(amount) AS total_spent
FROM payment
GROUP BY customer_id
HAVING SUM(amount) > 100;


-- INNER JOIN practice
SELECT payment_id,payment.customer_id,first_name
FROM payment
INNER JOIN customer
ON payment.customer_id = customer.customer_id;


-- FULL OUTER JOIN practice
SELECT * FROM customer
FULL OUTER JOIN payment
ON customer.customer_id = payment.customer_id
WHERE customer.customer_id IS null
OR payment.payment_id IS null


-- LEFT OUTER JOIN practice
SELECT film.film_id,title,inventory_id,store_id
FROM film
LEFT JOIN inventory
ON inventory.film_id = film.film_id
WHERE inventory.film_id IS null


-- CHALLENGE 1 
-- What are the emails of the customers who live in California?
SELECT district, email
FROM address
INNER JOIN customer
ON address.address_id = customer.address_id
WHERE district = 'California';


--CHALLENGE 2
-- Get a list of all the movies Nick Wahlberg has been in.
SELECT title, first_name, last_name
FROM actor
    INNER JOIN film_actor
    ON actor.actor_id = film_actor.actor_id
    INNER JOIN film
    ON film.film_id = film_actor.film_id
WHERE first_name = 'Nick' AND last_name = 'Wahlberg'


-- Current time with timezone
SELECT NOW ()

-- Current date 
SELECT CURRENT_DATE

-- Timestamps and extract. Can be done with month/quarter.
SELECT EXTRACT(YEAR FROM payment_date) AS year
FROM 

-- Age function. See how old records are
SELECT AGE(payment_date)
FROM payment

-- to_char function. Converts timestamp to text
SELECT DISTINCT (TO_CHAR(payment_date,'MONTH'))
FROM payment

-- How many payments occured on a Monday
SELECT COUNT (*)
FROM payment
WHERE EXTRACT(dow FROM payment_date) = 1

-- Mathematical functions
SELECT ROUND (rental_rate/replacement_cost,2)*100 AS percent_cost 
FROM film

-- String operators. Create full_name column combining first and last name
SELECT first_name || ' ' || last_name AS full_name
FROM customer

-- Create email address from name
SELECT LOWER (LEFT(first_name,1)) || LOWER(last_name) || '@gmail.com'
AS custom_email
FROM customer

-- Subquery practice. Write subquery first then put it in brackets
SELECT title,rental_rate
FROM film
WHERE rental_rate > 
(SELECT AVG(rental_rate) FROM film)

-- More subquery
SELECT film_id, title
FROM film
WHERE film_id IN
(SELECT inventory.film_id 
FROM rental
INNER JOIN inventory ON inventory.inventory_id = rental.inventory_id
WHERE return_date BETWEEN '2005-05-29' AND '2005-05-30')

-- EXIST operator
SELECT first_name, last_name
FROM customer AS c
WHERE EXISTS
(SELECT * FROM payment AS p
WHERE p.customer_id = c.customer_id
AND amount > 11)


















